# Copyright (c) 2013 Torben Toepper

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:

# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
unless defined?(Motion::Project::Config)
  raise "This file must be required within a RubyMotion project Rakefile."
end

# Configure
# ------------------------------------------------------------------------------
# The gem needs to be configured with the give data -> api_url
class MotionModelResourceConfig
  attr_accessor :api_url

  def initialize( config )
    @config = config
  end

  def api_url=( api_url )
    @api_url = api_url
    addApiUrl if api_url
  end

  private
  def addApiUrl
    return unless api_url
    config_code = <<EOF
# This file is automatically generated. Do not edit.
Api_url = '#{@api_url}'
EOF
    config_file = './app/resource_config.rb'
    if !File.exist?(config_file) or File.read(config_file) != config_code
      File.open(config_file, 'w') { |io| io.write(config_code) }
    end
    files = @config.files.flatten
    files << config_file unless files.find { |x| File.expand_path(x) == File.expand_path(config_file) }
  end
end

# Hook
# ------------------------------------------------------------------------------
# To get the api url globally configured we use the config class to hook into.
# This gives us the possibility to expose the api_url to the application.
module Motion; module Project; class Config
  variable :resource

  def resource
    @resource ||= MotionModelResourceConfig.new(self)
  end
end; end; end

# Files
# ------------------------------------------------------------------------------
# Make sure all files are used by the gem
Motion::Project::App.setup do |app|
  Dir.glob(File.join(File.dirname(__FILE__), 'motion_model_resource/*.rb')).each do |file|
    app.files.unshift(file)
  end
end
